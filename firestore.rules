rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isAuthenticated() {
      return request.auth != null;
    }

    function isParticipant(conversationId) {
      return request.auth.uid in get(/databases/$(database)/documents/service_conversations/$(conversationId)).data.participants;
    }

    // Service conversations
    match /service_conversations/{conversationId} {
      allow read, write: if isAuthenticated() && isParticipant(conversationId);
      
      // Messages subcollection
      match /messages/{messageId} {
        allow read, write: if isAuthenticated() && isParticipant(conversationId);
      }
    }

    // Provider requests collection
    match /provider_requests/{userId} {
      allow read, write: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      
      // Notifications subcollection
      match /notifications/{notificationId} {
        allow read, write: if isAuthenticated() && request.auth.uid == userId;
      }
    }

    // Global rule - allow read/write for authenticated users
    match /{document=**} {
      allow read, write: if isAuthenticated();
    }
    
    // Admin-only collections
    match /admin/{document=**} {
      allow read, write: if isAuthenticated() && isAdmin();
    }
  }
}